name: build

on: [ push, pull_request ]

jobs:
    tests:
        name:    PHP ${{ matrix.php }} Test on ${{ matrix.os }}

        env:
            extensions:       mbstring
            key:              cache-v1
            PHPUNIT_COVERAGE: 0
            PHP_INI:          date.timezone='UTC', memory_limit=-1

        strategy:
            matrix:
                os:
                    - ubuntu-latest
                php:
                    - '7.4'
                    - '8.0'

        runs-on: ${{ matrix.os }}

        steps:
            -
                name: Checkout
                uses: actions/checkout@v2

            -
                name: Install PHP with extensions
                uses: shivammathur/setup-php@v2
                with:
                    php-version: ${{ matrix.php }}
                    extensions:  ${{ env.extensions }}
                    coverage:    pcov
                    ini-values:  ${{ env.PHP_INI }}
                    tools:       composer:v2

            -
                name: Determine composer cache directory
                run:  echo "COMPOSER_CACHE_DIR=$(composer config cache-dir)" >> $GITHUB_ENV

            -
                name: Set coverage args
                if:   matrix.php == '7.4'
                run:  echo "PHPUNIT_COVERAGE=1" >> $GITHUB_ENV

            -
                name: Cache composer dependencies
                uses: actions/cache@v2
                with:
                    path:         ${{ env.COMPOSER_CACHE_DIR }}
                    key:          php${{ matrix.php }}-composer-${{ hashFiles('**/composer.json') }}
                    restore-keys: php${{ matrix.php }}-composer-

            -
                name: Check PHP Version
                run:  php -v

            -
                name: Check Composer Version
                run:  composer -V

            -
                name: Check PHP Extensions
                run:  php -m

            -
                name: Validate composer.json and composer.lock
                run:  composer validate

            -
                name: Install dependencies with composer
                run:  composer update --prefer-dist --no-interaction --no-progress --optimize-autoloader --ansi

            -
                name: Run tests with phpunit
                if:   env.PHPUNIT_COVERAGE == 0
                run:  vendor/bin/simple-phpunit -v -c phpunit.xml.dist

            -
                name: Run tests with phpunit and coverage
                if:   env.PHPUNIT_COVERAGE == 1
                run:  vendor/bin/simple-phpunit -v -c phpunit.xml.dist --coverage-clover=coverage.clover

            -
                name: Upload code coverage scrutinizer
                if:   env.PHPUNIT_COVERAGE == 1
                run:  |
                      wget https://scrutinizer-ci.com/ocular.phar
                      php ocular.phar code-coverage:upload --format=php-clover coverage.clover
